import {
  __commonJS,
  __require,
  init_esm_shims
} from "../../chunk-M3OKE2XU.mjs";

// src/commands/Util/embed.js
var require_embed = __commonJS({
  "src/commands/Util/embed.js"(exports, module) {
    init_esm_shims();
    var { SlashCommandBuilder, EmbedBuilder } = __require("discord.js");
    module.exports = {
      /** @type {import('commandkit').CommandData}  */
      data: new SlashCommandBuilder().setName("embed").setDescription("Crea un embed personalizado").addStringOption((option) => option.setName("titulo").setDescription("El t\xEDtulo del embed").setRequired(true)).addStringOption((option) => option.setName("descripcion").setDescription("La descripci\xF3n del embed").setRequired(true)).addStringOption((option) => option.setName("color").setDescription("El color del embed").addChoices({ name: "Rojo", value: "Red" }).addChoices({ name: "Azul", value: "Blue" }).addChoices({ name: "Verde", value: "Green" }).addChoices({ name: "Amarillo", value: "Yellow" }).addChoices({ name: "Morado", value: "Purple" }).addChoices({ name: "Azul gris\xE1ceo", value: "Blurple" }).addChoices({ name: "Naranja", value: "Gold" }).addChoices({ name: "Gris", value: "Gray" }).setRequired(false)).addStringOption((option) => option.setName("footer").setDescription("El pie del embed").setRequired(false)).addAttachmentOption((option) => option.setName("imagen").setDescription("La imagen del embed").setRequired(false)).addAttachmentOption((option) => option.setName("thumbnail").setDescription("La miniatura del embed").setRequired(false)).addBooleanOption((option) => option.setName("timesamp").setDescription("Si quieres que el campo sea en l\xEDnea").setRequired(false)),
      /**
       * @param {import('commandkit').SlashCommandProps} param0
       */
      run: async ({ interaction, client, handler }) => {
        const title = interaction.options.getString("titulo");
        const description = interaction.options.getString("descripcion");
        const color = interaction.options.getString("color") || "Blurple";
        const footer = interaction.options.getString("footer");
        const image = interaction.options.getAttachment("imagen");
        const thumbnail = interaction.options.getAttachment("thumbnail");
        const timestamp = interaction.options.getBoolean("timesamp");
        const embed = new EmbedBuilder();
        embed.setTitle(title);
        embed.setDescription(description);
        embed.setColor(color);
        if (footer)
          embed.setFooter({ text: `${footer}` });
        if (image)
          embed.setImage(image.url);
        if (thumbnail)
          embed.setThumbnail(thumbnail.url);
        if (timestamp)
          embed.setTimestamp();
        await interaction.reply({ embeds: [embed] });
      },
      /** @type {import('commandkit').CommandOptions} */
      options: {
        botPermissions: ["ManageMessages", "SendMessages"]
      }
    };
  }
});
export default require_embed();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2NvbW1hbmRzL1V0aWwvZW1iZWQuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IHsgU2xhc2hDb21tYW5kQnVpbGRlciwgRW1iZWRCdWlsZGVyIH0gPSByZXF1aXJlKCdkaXNjb3JkLmpzJyk7XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIC8qKiBAdHlwZSB7aW1wb3J0KCdjb21tYW5ka2l0JykuQ29tbWFuZERhdGF9ICAqL1xyXG4gIGRhdGE6IG5ldyBTbGFzaENvbW1hbmRCdWlsZGVyKClcclxuICAgIC5zZXROYW1lKCdlbWJlZCcpXHJcbiAgICAuc2V0RGVzY3JpcHRpb24oJ0NyZWEgdW4gZW1iZWQgcGVyc29uYWxpemFkbycpXHJcbiAgICAuYWRkU3RyaW5nT3B0aW9uKChvcHRpb24pID0+IG9wdGlvblxyXG4gICAgICAuc2V0TmFtZSgndGl0dWxvJylcclxuICAgICAgLnNldERlc2NyaXB0aW9uKCdFbCB0XHUwMEVEdHVsbyBkZWwgZW1iZWQnKVxyXG4gICAgICAuc2V0UmVxdWlyZWQodHJ1ZSkpXHJcbiAgICAgIC5hZGRTdHJpbmdPcHRpb24oKG9wdGlvbikgPT4gb3B0aW9uXHJcbiAgICAgIC5zZXROYW1lKCdkZXNjcmlwY2lvbicpXHJcbiAgICAgIC5zZXREZXNjcmlwdGlvbignTGEgZGVzY3JpcGNpXHUwMEYzbiBkZWwgZW1iZWQnKVxyXG4gICAgICAuc2V0UmVxdWlyZWQodHJ1ZSkpXHJcbiAgICAgIC5hZGRTdHJpbmdPcHRpb24oKG9wdGlvbikgPT4gb3B0aW9uXHJcbiAgICAgIC5zZXROYW1lKCdjb2xvcicpXHJcbiAgICAgIC5zZXREZXNjcmlwdGlvbignRWwgY29sb3IgZGVsIGVtYmVkJylcclxuICAgICAgICAuYWRkQ2hvaWNlcyh7IG5hbWU6ICdSb2pvJywgdmFsdWU6ICdSZWQnIH0pXHJcbiAgICAgICAgLmFkZENob2ljZXMoeyBuYW1lOiAnQXp1bCcsIHZhbHVlOiAnQmx1ZScgfSlcclxuICAgICAgICAuYWRkQ2hvaWNlcyh7IG5hbWU6ICdWZXJkZScsIHZhbHVlOiAnR3JlZW4nIH0pXHJcbiAgICAgICAgLmFkZENob2ljZXMoeyBuYW1lOiAnQW1hcmlsbG8nLCB2YWx1ZTogJ1llbGxvdycgfSlcclxuICAgICAgICAuYWRkQ2hvaWNlcyh7IG5hbWU6ICdNb3JhZG8nLCB2YWx1ZTogJ1B1cnBsZScgfSlcclxuICAgICAgICAuYWRkQ2hvaWNlcyh7IG5hbWU6ICdBenVsIGdyaXNcdTAwRTFjZW8nLCB2YWx1ZTogJ0JsdXJwbGUnIH0pXHJcbiAgICAgICAgLmFkZENob2ljZXMoeyBuYW1lOiAnTmFyYW5qYScsIHZhbHVlOiAnR29sZCcgfSlcclxuICAgICAgICAuYWRkQ2hvaWNlcyh7IG5hbWU6ICdHcmlzJywgdmFsdWU6ICdHcmF5JyB9KVxyXG4gICAgICAuc2V0UmVxdWlyZWQoZmFsc2UpKVxyXG4gICAgLmFkZFN0cmluZ09wdGlvbigob3B0aW9uKSA9PiBvcHRpb25cclxuICAgIC5zZXROYW1lKCdmb290ZXInKVxyXG4gICAgLnNldERlc2NyaXB0aW9uKCdFbCBwaWUgZGVsIGVtYmVkJylcclxuICAgIC5zZXRSZXF1aXJlZChmYWxzZSkpXHJcbiAgICAuYWRkQXR0YWNobWVudE9wdGlvbigob3B0aW9uKSA9PiBvcHRpb25cclxuICAgIC5zZXROYW1lKCdpbWFnZW4nKVxyXG4gICAgLnNldERlc2NyaXB0aW9uKCdMYSBpbWFnZW4gZGVsIGVtYmVkJylcclxuICAgIC5zZXRSZXF1aXJlZChmYWxzZSkpXHJcbiAgICAuYWRkQXR0YWNobWVudE9wdGlvbigob3B0aW9uKSA9PiBvcHRpb25cclxuICAgIC5zZXROYW1lKCd0aHVtYm5haWwnKVxyXG4gICAgLnNldERlc2NyaXB0aW9uKCdMYSBtaW5pYXR1cmEgZGVsIGVtYmVkJylcclxuICAgIC5zZXRSZXF1aXJlZChmYWxzZSkpXHJcbiAgICAuYWRkQm9vbGVhbk9wdGlvbigob3B0aW9uKSA9PiBvcHRpb25cclxuICAgIC5zZXROYW1lKCd0aW1lc2FtcCcpXHJcbiAgICAuc2V0RGVzY3JpcHRpb24oJ1NpIHF1aWVyZXMgcXVlIGVsIGNhbXBvIHNlYSBlbiBsXHUwMEVEbmVhJylcclxuICAgIC5zZXRSZXF1aXJlZChmYWxzZSkpLFxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7aW1wb3J0KCdjb21tYW5ka2l0JykuU2xhc2hDb21tYW5kUHJvcHN9IHBhcmFtMFxyXG4gICAqL1xyXG4gIHJ1bjogYXN5bmMgKHsgaW50ZXJhY3Rpb24sIGNsaWVudCwgaGFuZGxlciB9KSA9PiB7XHJcblxyXG4gICAgY29uc3QgdGl0bGUgPSBpbnRlcmFjdGlvbi5vcHRpb25zLmdldFN0cmluZyhcInRpdHVsb1wiKTtcclxuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gaW50ZXJhY3Rpb24ub3B0aW9ucy5nZXRTdHJpbmcoXCJkZXNjcmlwY2lvblwiKTtcclxuICAgIGNvbnN0IGNvbG9yID0gaW50ZXJhY3Rpb24ub3B0aW9ucy5nZXRTdHJpbmcoXCJjb2xvclwiKSB8fCAnQmx1cnBsZSc7XHJcbiAgICBjb25zdCBmb290ZXIgPSBpbnRlcmFjdGlvbi5vcHRpb25zLmdldFN0cmluZyhcImZvb3RlclwiKTtcclxuICAgIGNvbnN0IGltYWdlID0gaW50ZXJhY3Rpb24ub3B0aW9ucy5nZXRBdHRhY2htZW50KFwiaW1hZ2VuXCIpO1xyXG4gICAgY29uc3QgdGh1bWJuYWlsID0gaW50ZXJhY3Rpb24ub3B0aW9ucy5nZXRBdHRhY2htZW50KFwidGh1bWJuYWlsXCIpO1xyXG4gICAgY29uc3QgdGltZXN0YW1wID0gaW50ZXJhY3Rpb24ub3B0aW9ucy5nZXRCb29sZWFuKFwidGltZXNhbXBcIik7XHJcblxyXG4gICAgY29uc3QgZW1iZWQgPSBuZXcgRW1iZWRCdWlsZGVyKClcclxuXHJcbiAgICBlbWJlZC5zZXRUaXRsZSh0aXRsZSlcclxuICAgIGVtYmVkLnNldERlc2NyaXB0aW9uKGRlc2NyaXB0aW9uKVxyXG4gICAgZW1iZWQuc2V0Q29sb3IoY29sb3IpXHJcbiAgICBpZiAoZm9vdGVyKSBlbWJlZC5zZXRGb290ZXIoe3RleHQ6IGAke2Zvb3Rlcn1gfSlcclxuICAgIGlmIChpbWFnZSkgZW1iZWQuc2V0SW1hZ2UoaW1hZ2UudXJsKVxyXG4gICAgaWYgKHRodW1ibmFpbCkgZW1iZWQuc2V0VGh1bWJuYWlsKHRodW1ibmFpbC51cmwpXHJcbiAgICBpZiAodGltZXN0YW1wKSBlbWJlZC5zZXRUaW1lc3RhbXAoKVxyXG5cclxuICAgIGF3YWl0IGludGVyYWN0aW9uLnJlcGx5KHsgZW1iZWRzOiBbZW1iZWRdIH0pO1xyXG5cclxuICB9LFxyXG5cclxuICAvKiogQHR5cGUge2ltcG9ydCgnY29tbWFuZGtpdCcpLkNvbW1hbmRPcHRpb25zfSAqL1xyXG4gIG9wdGlvbnM6IHtcclxuICAgIGJvdFBlcm1pc3Npb25zOiBbJ01hbmFnZU1lc3NhZ2VzJywgJ1NlbmRNZXNzYWdlcyddLFxyXG4gIH0sXHJcbn07XHJcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQSxRQUFNLEVBQUUscUJBQXFCLGFBQWEsSUFBSSxVQUFRLFlBQVk7QUFDbEUsV0FBTyxVQUFVO0FBQUE7QUFBQSxNQUVmLE1BQU0sSUFBSSxvQkFBb0IsRUFDM0IsUUFBUSxPQUFPLEVBQ2YsZUFBZSw2QkFBNkIsRUFDNUMsZ0JBQWdCLENBQUMsV0FBVyxPQUMxQixRQUFRLFFBQVEsRUFDaEIsZUFBZSx3QkFBcUIsRUFDcEMsWUFBWSxJQUFJLENBQUMsRUFDakIsZ0JBQWdCLENBQUMsV0FBVyxPQUM1QixRQUFRLGFBQWEsRUFDckIsZUFBZSw2QkFBMEIsRUFDekMsWUFBWSxJQUFJLENBQUMsRUFDakIsZ0JBQWdCLENBQUMsV0FBVyxPQUM1QixRQUFRLE9BQU8sRUFDZixlQUFlLG9CQUFvQixFQUNqQyxXQUFXLEVBQUUsTUFBTSxRQUFRLE9BQU8sTUFBTSxDQUFDLEVBQ3pDLFdBQVcsRUFBRSxNQUFNLFFBQVEsT0FBTyxPQUFPLENBQUMsRUFDMUMsV0FBVyxFQUFFLE1BQU0sU0FBUyxPQUFPLFFBQVEsQ0FBQyxFQUM1QyxXQUFXLEVBQUUsTUFBTSxZQUFZLE9BQU8sU0FBUyxDQUFDLEVBQ2hELFdBQVcsRUFBRSxNQUFNLFVBQVUsT0FBTyxTQUFTLENBQUMsRUFDOUMsV0FBVyxFQUFFLE1BQU0sb0JBQWlCLE9BQU8sVUFBVSxDQUFDLEVBQ3RELFdBQVcsRUFBRSxNQUFNLFdBQVcsT0FBTyxPQUFPLENBQUMsRUFDN0MsV0FBVyxFQUFFLE1BQU0sUUFBUSxPQUFPLE9BQU8sQ0FBQyxFQUM1QyxZQUFZLEtBQUssQ0FBQyxFQUNwQixnQkFBZ0IsQ0FBQyxXQUFXLE9BQzVCLFFBQVEsUUFBUSxFQUNoQixlQUFlLGtCQUFrQixFQUNqQyxZQUFZLEtBQUssQ0FBQyxFQUNsQixvQkFBb0IsQ0FBQyxXQUFXLE9BQ2hDLFFBQVEsUUFBUSxFQUNoQixlQUFlLHFCQUFxQixFQUNwQyxZQUFZLEtBQUssQ0FBQyxFQUNsQixvQkFBb0IsQ0FBQyxXQUFXLE9BQ2hDLFFBQVEsV0FBVyxFQUNuQixlQUFlLHdCQUF3QixFQUN2QyxZQUFZLEtBQUssQ0FBQyxFQUNsQixpQkFBaUIsQ0FBQyxXQUFXLE9BQzdCLFFBQVEsVUFBVSxFQUNsQixlQUFlLHlDQUFzQyxFQUNyRCxZQUFZLEtBQUssQ0FBQztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BSXJCLEtBQUssT0FBTyxFQUFFLGFBQWEsUUFBUSxRQUFRLE1BQU07QUFFL0MsY0FBTSxRQUFRLFlBQVksUUFBUSxVQUFVLFFBQVE7QUFDcEQsY0FBTSxjQUFjLFlBQVksUUFBUSxVQUFVLGFBQWE7QUFDL0QsY0FBTSxRQUFRLFlBQVksUUFBUSxVQUFVLE9BQU8sS0FBSztBQUN4RCxjQUFNLFNBQVMsWUFBWSxRQUFRLFVBQVUsUUFBUTtBQUNyRCxjQUFNLFFBQVEsWUFBWSxRQUFRLGNBQWMsUUFBUTtBQUN4RCxjQUFNLFlBQVksWUFBWSxRQUFRLGNBQWMsV0FBVztBQUMvRCxjQUFNLFlBQVksWUFBWSxRQUFRLFdBQVcsVUFBVTtBQUUzRCxjQUFNLFFBQVEsSUFBSSxhQUFhO0FBRS9CLGNBQU0sU0FBUyxLQUFLO0FBQ3BCLGNBQU0sZUFBZSxXQUFXO0FBQ2hDLGNBQU0sU0FBUyxLQUFLO0FBQ3BCLFlBQUk7QUFBUSxnQkFBTSxVQUFVLEVBQUMsTUFBTSxHQUFHLE1BQU0sR0FBRSxDQUFDO0FBQy9DLFlBQUk7QUFBTyxnQkFBTSxTQUFTLE1BQU0sR0FBRztBQUNuQyxZQUFJO0FBQVcsZ0JBQU0sYUFBYSxVQUFVLEdBQUc7QUFDL0MsWUFBSTtBQUFXLGdCQUFNLGFBQWE7QUFFbEMsY0FBTSxZQUFZLE1BQU0sRUFBRSxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUM7QUFBQSxNQUU3QztBQUFBO0FBQUEsTUFHQSxTQUFTO0FBQUEsUUFDUCxnQkFBZ0IsQ0FBQyxrQkFBa0IsY0FBYztBQUFBLE1BQ25EO0FBQUEsSUFDRjtBQUFBO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==